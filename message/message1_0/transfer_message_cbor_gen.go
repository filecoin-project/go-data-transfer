// Code generated by github.com/whyrusleeping/cbor-gen. DO NOT EDIT.

package message1_0

import (
	"fmt"
	"io"

	cbg "github.com/whyrusleeping/cbor-gen"
	xerrors "golang.org/x/xerrors"
)

var _ = xerrors.Errorf

var lengthBuftransferMessage = []byte{131}

func (t *transferMessage) MarshalCBOR(w io.Writer) error {
	if t == nil {
		_, err := w.Write(cbg.CborNull)
		return err
	}
	if _, err := w.Write(lengthBuftransferMessage); err != nil {
		return err
	}

	// t.IsRq (bool) (bool)
	if err := cbg.WriteBool(w, t.IsRq); err != nil {
		return err
	}

	// t.Request (message1_0.transferRequest) (struct)
	if err := t.Request.MarshalCBOR(w); err != nil {
		return err
	}

	// t.Response (message1_0.transferResponse) (struct)
	if err := t.Response.MarshalCBOR(w); err != nil {
		return err
	}
	return nil
}

func (t *transferMessage) UnmarshalCBOR(r io.Reader) error {
	*t = transferMessage{}

	br := cbg.GetPeeker(r)
	scratch := make([]byte, 8)

	maj, extra, err := cbg.CborReadHeaderBuf(br, scratch)
	if err != nil {
		return err
	}
	if maj != cbg.MajArray {
		return fmt.Errorf("cbor input should be of type array")
	}

	if extra != 3 {
		return fmt.Errorf("cbor input had wrong number of fields")
	}

	// t.IsRq (bool) (bool)

	maj, extra, err = cbg.CborReadHeaderBuf(br, scratch)
	if err != nil {
		return err
	}
	if maj != cbg.MajOther {
		return fmt.Errorf("booleans must be major type 7")
	}
	switch extra {
	case 20:
		t.IsRq = false
	case 21:
		t.IsRq = true
	default:
		return fmt.Errorf("booleans are either major type 7, value 20 or 21 (got %d)", extra)
	}
	// t.Request (message1_0.transferRequest) (struct)

	{

		b, err := br.ReadByte()
		if err != nil {
			return err
		}
		if b != cbg.CborNull[0] {
			if err := br.UnreadByte(); err != nil {
				return err
			}
			t.Request = new(transferRequest)
			if err := t.Request.UnmarshalCBOR(br); err != nil {
				return xerrors.Errorf("unmarshaling t.Request pointer: %w", err)
			}
		}

	}
	// t.Response (message1_0.transferResponse) (struct)

	{

		b, err := br.ReadByte()
		if err != nil {
			return err
		}
		if b != cbg.CborNull[0] {
			if err := br.UnreadByte(); err != nil {
				return err
			}
			t.Response = new(transferResponse)
			if err := t.Response.UnmarshalCBOR(br); err != nil {
				return xerrors.Errorf("unmarshaling t.Response pointer: %w", err)
			}
		}

	}
	return nil
}

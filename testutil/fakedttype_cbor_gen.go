// Code generated by github.com/whyrusleeping/cbor-gen. DO NOT EDIT.

package testutil

import (
	"fmt"
	"io"

	cbg "github.com/whyrusleeping/cbor-gen"
	xerrors "golang.org/x/xerrors"
)

var _ = xerrors.Errorf

var lengthBufFakeDTType = []byte{129}

func (t *FakeDTType) MarshalCBOR(w io.Writer) error {
	if t == nil {
		_, err := w.Write(cbg.CborNull)
		return err
	}
	if _, err := w.Write(lengthBufFakeDTType); err != nil {
		return err
	}

	scratch := make([]byte, 9)

	// t.Data (string) (string)
	if len(t.Data) > cbg.MaxLength {
		return xerrors.Errorf("Value in field t.Data was too long")
	}

	if err := cbg.WriteMajorTypeHeaderBuf(scratch, w, cbg.MajTextString, uint64(len(t.Data))); err != nil {
		return err
	}
	if _, err := io.WriteString(w, string(t.Data)); err != nil {
		return err
	}
	return nil
}

func (t *FakeDTType) UnmarshalCBOR(r io.Reader) error {
	*t = FakeDTType{}

	br := cbg.GetPeeker(r)
	scratch := make([]byte, 8)

	maj, extra, err := cbg.CborReadHeaderBuf(br, scratch)
	if err != nil {
		return err
	}
	if maj != cbg.MajArray {
		return fmt.Errorf("cbor input should be of type array")
	}

	if extra != 1 {
		return fmt.Errorf("cbor input had wrong number of fields")
	}

	// t.Data (string) (string)

	{
		sval, err := cbg.ReadStringBuf(br, scratch)
		if err != nil {
			return err
		}

		t.Data = string(sval)
	}
	return nil
}
